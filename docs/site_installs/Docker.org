There are two sets of instructions in parallel, one for Podman, one
for Docker.  Podman has been tested more recently and is recommended.

These instructions assume that you have a rootfs.tar.xz image of
Debian's 10.10 release (buster).  It should work with minimal changes
for the most recent 11 release (bullseye).  You should be able to get
the image from https://docker.debian.net/

It also assumes that you have a copy of the MPSolve 2.2 tar ball.  You
can get that from https://numpi.dm.unipi.it/mpsolve-2.2/

The instructions have you build SDPB, scalar_blocks, blocks_3d, and
spectrum_extraction in one container in the directory
$HOME/docker/sdpb_dev/.  Then you will copy the necessary bits to a
second container built in $HOME/docker/sdpb/.  Doing it this way
allows the second container to be significantly smaller.

The instructions assume that $HOME/docker/sdpb has rootfs.tar.xz and
sdpb_dev_Dockerfile, and $HOME/docker/sdpb_dev has rootfs.tar.xz,
mpsolve.tgz, and sdpb_Dockerfile.  You will need to rename
sdpb_dev_Dockerfile and sdpb_Dockerfile to Dockerfile in their
respective directories.

You will probably need to change the mount directories (-v option) for
your local system.

There are also instructions for pushing the container to
hub.docker.com.

* Build
** In $HOME/docker/sdpb_dev/
*** Update date for base OS
*** Update 'git log' hash
*** Podman
**** podman build --tag=sdpb_dev .
**** podman run -v $HOME/docker/sdpb:/usr/local/src/tgz sdpb_dev tar -zcvf tgz/sdpb.tgz ../bin/ ../lib/
*** Docker
**** docker build --tag=sdpb_dev .
**** docker run -v $HOME/docker/sdpb:/usr/local/src/tgz sdpb_dev tar -zcvf tgz/sdpb.tgz ../bin/ ../lib/
** In $HOME/docker/sdpb/
*** Update date for base OS
*** Podman
**** podman build --tag=sdpb:2.5.0 .
**** podman login -u wlandry docker.io
**** podman tag sdpb:2.5.0 docker.io/wlandry/sdpb:2.5.0
**** podman push docker.io/wlandry/sdpb:2.5.0
*** Docker
**** docker build --tag=sdpb:2.5.0 .
**** docker login -u wlandry
**** docker tag sdpb:2.5.0 wlandry/sdpb:2.5.0
**** docker push wlandry/sdpb:2.5.0
* Run
** Podman
*** podman run -v $HOME/scalar_blocks:/usr/local/share/scalar_blocks sdpb:2.5.0 scalar_blocks --dim 3 --order 5 --max-derivs 6 --spin-ranges 0-21 --poles 6 --delta-12 0.8791  --delta-34 0.8791 --num-threads=4 -o /usr/local/share/scalar_blocks/tests/benchmark --precision=665
*** podman run -v $HOME/blocks_3d:/usr/local/share/blocks_3d sdpb:2.5.0 blocks_3d --j-external "0, 0, 0, 0" --j-internal "0-4" --j-12 0 --j-43 0 --delta-12 0.12 --delta-43 0.543 --four-pt-struct "0, 0, 0, 0" --four-pt-sign=1 --order 20 --lambda 5 --kept-pole-order 10 --num-threads 4 --precision 665 -o /usr/local/share/blocks_3d/test/benchmark/derivs_{}.json --coordinates="zzb,yyb,xt,ws,xt_radial,ws_radial" --delta-1-plus-2="2.3"
*** podman run -v $HOME/sdpb/:/usr/local/share/sdpb sdpb:2.5.0 mpirun --allow-run-as-root pvm2sdp 1024 /usr/local/share/sdpb/test/test.xml /usr/local/share/sdpb/test/test
*** podman run -v $HOME/sdpb/:/usr/local/share/sdpb sdpb:2.5.0 mpirun --allow-run-as-root sdpb --precision=1024 --noFinalCheckpoint --procsPerNode=4 -s /usr/local/share/sdpb/test/test
*** podman run -v $HOME/sdpb/:/usr/local/share/spectrum sdpb:2.5.0 spectrum.py -s /usr/local/share/spectrum/test/spectrum_test.xml -o /usr/local/share/spectrum/test/spectrum_test_out -m /usr/local/share/spectrum/test/spectrum_test.spectrum.m -p 1024
** Docker
*** docker run -v $HOME/scalar_blocks:/usr/local/share/scalar_blocks sdpb:2.5.0 scalar_blocks --dim 3 --order 5 --max-derivs 6 --spin-ranges 0-21 --poles 6 --delta-12 0.8791  --delta-34 0.8791 --num-threads=4 -o /usr/local/share/scalar_blocks/tests/benchmark --precision=665
*** docker run -v $HOME/sdpb/:/usr/local/share/sdpb sdpb:2.5.0 mpirun --allow-run-as-root pvm2sdp 1024 /usr/local/share/sdpb/test/test.xml /usr/local/share/sdpb/test/test
*** docker run -v $HOME/sdpb/:/usr/local/share/sdpb sdpb:2.5.0 mpirun --allow-run-as-root sdpb --precision=1024 --noFinalCheckpoint --procsPerNode=4 -s /usr/local/share/sdpb/test/test
*** docker run -v $HOME/sdpb/:/usr/local/share/spectrum sdpb:2.5.0 spectrum.py -s /usr/local/share/spectrum/test/spectrum_test.xml -o /usr/local/share/spectrum/test/spectrum_test_out -m /usr/local/share/spectrum/test/spectrum_test.spectrum.m -p 1024
